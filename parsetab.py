
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'SASIGNACION COMO COR_DER COR_IZQ DEFINA ELEMENTO_QUIMICO ENLACE FIN FIN_DE_LINEA ID INICIO OPERACION PALABRAS_RESERVADAS PARAENTESIS_DER PARAENTESIS_IZQ TIPO VALENCIAS : INICIO sentencias FINsentencias : sentencia FIN_DE_LINEA sentencias\t\n                  | sentencia FIN_DE_LINEAsentencia : DEFINA ID COMO TIPO\n                 | ID ASIGNACION modelo_molecular\n                 | OPERACION PARAENTESIS_IZQ ID PARAENTESIS_DERcompuesto : ELEMENTO_QUIMICO\n                 | ELEMENTO_QUIMICO VALENCIA\n                 | elemento grupo_funcional\n                 | elemento grupo_funcional ENLACE\n                 | elemento ENLACEcompuestos : compuesto compuestos\n                 | compuestomodelo_molecular : ELEMENTO_QUIMICO\n                        | ELEMENTO_QUIMICO VALENCIA\n                        | elemento grupo_funcional \n                        | compuesto grupo_funcional\n                        | compuesto elemento grupo_funcional\n                        | compuesto compuesto compuestosgrupo_funcional : grupo_funcional_inferior grupo_funcional_superior\n                        | grupo_funcional_superior grupo_funcional_inferior\n                        | grupo_funcional_superior\n                        | grupo_funcional_inferiorgrupo_funcional_superior : PARAENTESIS_IZQ modelo_grupo_funcional PARAENTESIS_DERgrupo_funcional_inferior : COR_IZQ modelo_grupo_funcional COR_DERmodelo_grupo_funcional : ENLACE modelo_molecular\n                              | ELEMENTO_QUIMICO\n                              | ELEMENTO_QUIMICO VALENCIA\n                              | elemento grupo_funcional\n                              | compuesto elemento\n                              | compuesto elemento grupo_funcional\n                              | compuesto compuesto compuestos elemento : ELEMENTO_QUIMICO\n            | ELEMENTO_QUIMICO VALENCIA '
    
_lr_action_items = {'INICIO':([0,],[2,]),'$end':([1,8,],[0,-1,]),'DEFINA':([2,9,],[5,5,]),'ID':([2,5,9,12,],[6,10,6,19,]),'OPERACION':([2,9,],[7,7,]),'FIN':([3,9,13,],[8,-3,-2,]),'FIN_DE_LINEA':([4,15,16,20,21,22,23,24,25,29,32,33,34,35,42,43,44,46,48,54,55,56,57,],[9,-5,-14,-4,-15,-16,-11,-23,-22,-17,-6,-10,-20,-21,-13,-19,-7,-18,-25,-24,-12,-8,-9,]),'ASIGNACION':([6,],[11,]),'PARAENTESIS_IZQ':([7,16,17,18,21,22,23,24,25,30,31,33,34,35,38,39,44,45,47,48,50,53,54,56,],[12,-7,27,27,-8,-9,-11,27,-22,27,-33,-10,-20,-21,-33,27,-33,27,-34,-25,-34,27,-24,-34,]),'COMO':([10,],[14,]),'ELEMENTO_QUIMICO':([11,16,18,21,22,23,24,25,26,27,28,31,33,34,35,37,38,40,42,44,46,47,48,50,51,52,54,56,57,59,],[16,-7,31,-8,-9,-11,-23,-22,38,38,44,-7,-10,-20,-21,16,-7,31,44,-7,-9,-8,-25,-8,-9,44,-24,-8,-9,-9,]),'TIPO':([14,],[20,]),'COR_DER':([16,21,22,23,24,25,29,31,33,34,35,36,38,42,43,44,46,47,48,49,50,51,53,54,55,56,57,58,59,],[-14,-15,-16,-11,-23,-22,-17,-33,-10,-20,-21,48,-27,-13,-19,-7,-18,-34,-25,-26,-28,-29,-30,-24,-12,-8,-9,-32,-31,]),'PARAENTESIS_DER':([16,19,21,22,23,24,25,29,31,33,34,35,38,41,42,43,44,46,47,48,49,50,51,53,54,55,56,57,58,59,],[-14,32,-15,-16,-11,-23,-22,-17,-33,-10,-20,-21,-27,54,-13,-19,-7,-18,-34,-25,-26,-28,-29,-30,-24,-12,-8,-9,-32,-31,]),'VALENCIA':([16,31,38,44,],[21,47,50,56,]),'ENLACE':([16,17,21,22,24,25,26,27,30,31,34,35,38,39,44,45,46,47,48,50,51,53,54,56,57,59,],[-33,23,-34,33,-23,-22,37,37,23,-33,-20,-21,-33,23,-33,23,33,-34,-25,-34,33,23,-24,-34,33,33,]),'COR_IZQ':([16,17,18,21,22,23,24,25,30,31,33,34,35,38,39,44,45,47,48,50,53,54,56,],[-7,26,26,-8,-9,-11,-23,26,26,-33,-10,-20,-21,-33,26,-33,26,-34,-25,-34,26,-24,-34,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'S':([0,],[1,]),'sentencias':([2,9,],[3,13,]),'sentencia':([2,9,],[4,4,]),'modelo_molecular':([11,37,],[15,49,]),'elemento':([11,18,26,27,28,37,40,42,52,],[17,30,39,39,45,17,53,45,45,]),'compuesto':([11,18,26,27,28,37,40,42,52,],[18,28,40,40,42,18,52,42,42,]),'grupo_funcional':([17,18,30,39,45,53,],[22,29,46,51,57,59,]),'grupo_funcional_inferior':([17,18,25,30,39,45,53,],[24,24,35,24,24,24,24,]),'grupo_funcional_superior':([17,18,24,30,39,45,53,],[25,25,34,25,25,25,25,]),'modelo_grupo_funcional':([26,27,],[36,41,]),'compuestos':([28,42,52,],[43,55,58,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> S","S'",1,None,None,None),
  ('S -> INICIO sentencias FIN','S',3,'p_S','PARSERTEST.py',34),
  ('sentencias -> sentencia FIN_DE_LINEA sentencias','sentencias',3,'p_sentencias','PARSERTEST.py',45),
  ('sentencias -> sentencia FIN_DE_LINEA','sentencias',2,'p_sentencias','PARSERTEST.py',46),
  ('sentencia -> DEFINA ID COMO TIPO','sentencia',4,'p_sentencia','PARSERTEST.py',60),
  ('sentencia -> ID ASIGNACION modelo_molecular','sentencia',3,'p_sentencia','PARSERTEST.py',61),
  ('sentencia -> OPERACION PARAENTESIS_IZQ ID PARAENTESIS_DER','sentencia',4,'p_sentencia','PARSERTEST.py',62),
  ('compuesto -> ELEMENTO_QUIMICO','compuesto',1,'p_compuesto','PARSERTEST.py',74),
  ('compuesto -> ELEMENTO_QUIMICO VALENCIA','compuesto',2,'p_compuesto','PARSERTEST.py',75),
  ('compuesto -> elemento grupo_funcional','compuesto',2,'p_compuesto','PARSERTEST.py',76),
  ('compuesto -> elemento grupo_funcional ENLACE','compuesto',3,'p_compuesto','PARSERTEST.py',77),
  ('compuesto -> elemento ENLACE','compuesto',2,'p_compuesto','PARSERTEST.py',78),
  ('compuestos -> compuesto compuestos','compuestos',2,'p_compuestos','PARSERTEST.py',89),
  ('compuestos -> compuesto','compuestos',1,'p_compuestos','PARSERTEST.py',90),
  ('modelo_molecular -> ELEMENTO_QUIMICO','modelo_molecular',1,'p_modelo_molecular','PARSERTEST.py',101),
  ('modelo_molecular -> ELEMENTO_QUIMICO VALENCIA','modelo_molecular',2,'p_modelo_molecular','PARSERTEST.py',102),
  ('modelo_molecular -> elemento grupo_funcional','modelo_molecular',2,'p_modelo_molecular','PARSERTEST.py',103),
  ('modelo_molecular -> compuesto grupo_funcional','modelo_molecular',2,'p_modelo_molecular','PARSERTEST.py',104),
  ('modelo_molecular -> compuesto elemento grupo_funcional','modelo_molecular',3,'p_modelo_molecular','PARSERTEST.py',105),
  ('modelo_molecular -> compuesto compuesto compuestos','modelo_molecular',3,'p_modelo_molecular','PARSERTEST.py',106),
  ('grupo_funcional -> grupo_funcional_inferior grupo_funcional_superior','grupo_funcional',2,'p_grupo_funcional','PARSERTEST.py',118),
  ('grupo_funcional -> grupo_funcional_superior grupo_funcional_inferior','grupo_funcional',2,'p_grupo_funcional','PARSERTEST.py',119),
  ('grupo_funcional -> grupo_funcional_superior','grupo_funcional',1,'p_grupo_funcional','PARSERTEST.py',120),
  ('grupo_funcional -> grupo_funcional_inferior','grupo_funcional',1,'p_grupo_funcional','PARSERTEST.py',121),
  ('grupo_funcional_superior -> PARAENTESIS_IZQ modelo_grupo_funcional PARAENTESIS_DER','grupo_funcional_superior',3,'p_grupo_funcional_superior','PARSERTEST.py',134),
  ('grupo_funcional_inferior -> COR_IZQ modelo_grupo_funcional COR_DER','grupo_funcional_inferior',3,'p_grupo_funcional_inferior','PARSERTEST.py',147),
  ('modelo_grupo_funcional -> ENLACE modelo_molecular','modelo_grupo_funcional',2,'p_modelo_grupo_funcional','PARSERTEST.py',159),
  ('modelo_grupo_funcional -> ELEMENTO_QUIMICO','modelo_grupo_funcional',1,'p_modelo_grupo_funcional','PARSERTEST.py',160),
  ('modelo_grupo_funcional -> ELEMENTO_QUIMICO VALENCIA','modelo_grupo_funcional',2,'p_modelo_grupo_funcional','PARSERTEST.py',161),
  ('modelo_grupo_funcional -> elemento grupo_funcional','modelo_grupo_funcional',2,'p_modelo_grupo_funcional','PARSERTEST.py',162),
  ('modelo_grupo_funcional -> compuesto elemento','modelo_grupo_funcional',2,'p_modelo_grupo_funcional','PARSERTEST.py',163),
  ('modelo_grupo_funcional -> compuesto elemento grupo_funcional','modelo_grupo_funcional',3,'p_modelo_grupo_funcional','PARSERTEST.py',164),
  ('modelo_grupo_funcional -> compuesto compuesto compuestos','modelo_grupo_funcional',3,'p_modelo_grupo_funcional','PARSERTEST.py',165),
  ('elemento -> ELEMENTO_QUIMICO','elemento',1,'p_elemento','PARSERTEST.py',178),
  ('elemento -> ELEMENTO_QUIMICO VALENCIA','elemento',2,'p_elemento','PARSERTEST.py',179),
]
